// Домашняя работа 3
// 1. С помощью цикла while вывести все простые числа в промежутке от 0 до 100
// Вариант 1 (рабочий)

function isPrime(n) {
    for (let i = 2; i < n; i++) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}
let num = 2;
while (num <= 100) {
    if (isPrime(num)) {
        console.log(num);
        num++;
    } else { 
        num++; 
    }
}

// Вариант 2 (нерабочий)
// let i = 2;
// while (i <= 100) {
//     let j = 2;
//     while (j < i) {
//         if (i % j == 0) break;
//         j++;   
//     }
//     if (j > i) {
//     console.log(i);
//     i++;
// }
// }


// 2. С этого урока начинаем работать с функционалом интернет-магазина. Предположим, есть сущность корзины. Нужно реализовать функционал подсчета стоимости корзины в зависимости от находящихся в ней товаров. (пропускаем до след. занятия)
// 3. Товары в корзине хранятся в массиве. Задачи: (пропускаем до след. занятия)
// a) Организовать такой массив для хранения товаров в корзине; (пропускаем до след. занятия)
// b) Организовать функцию countBasketPrice, которая будет считать стоимость корзины. (пропускаем до след. занятия)


// 4.*Вывести с помощью цикла for числа от 0 до 9, не используя тело цикла. Выглядеть это должно так:
// for(…){// здесь пусто}

// for (let i = 0; i <= 9; console.log(i), i++) { }

// 4) *Нарисовать пирамиду с помощью console.log, как показано на рисунке, только у вашей пирамиды должно быть 20 рядов, а не 5:
// x
// xx
// xxx
// xxxx
// xxxxx

let arr = [];
let rows = 0;
while (rows <= 20) {
    rows++;
    arr.push('x');
    console.log(arr.join(''));
}
// 5) ** Реализовать игру "Камень, ножницы...." через цикл while И через рекурсию с возможностью прекращения игры
